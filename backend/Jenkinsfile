pipeline {
    agent none
    environment {
        SERVER_CREDENTIALS = 's3-access'
        PARAMETER_STORE_CREDENTIALS = credentials('parameterstore')
        WEBHOOK_URL = credentials('DiscordWebhookDT')
        BUCKET = 'dmytro-team-bucket'
        BACKEND_BUCKET = 'dmytro-team-backend'
        REGION = 'eu-central-1'
    }
    stages {
        stage('Build') {
            agent { label 'java && jdk-17' }
            steps {
                git branch: 'dev', url: 'https://github.com/ProvedCode/backend.git'

                        // export S3_ACCESS_KEY=$(DT_BACKEND_ACCESS_KEY)
                        // echo S3_ACCESS_KEY

                withAWSParameterStore (namePrefixes: "dt_backend_access_key", regionName: "${REGION}") {
                    sh '''
                        echo "${env.dt_backend_access_key}" 
                        export S3_ACCESS_KEY="${env.dt_backend_access_key}"
                        echo $S3_ACCESS_KEY
                        sleep 3
                    '''  
                }

                sh '''
                    export JAVA_HOME="/lib/jvm/jdk-17"
                    chmod 744 ./mvnw
                    rm -f .env
                    echo "SPRING_PROFILES_ACTIVE=prod" >> .env
                    ./mvnw clean package
                    cp ./target/demo*.jar ./demo-${BUILD_NUMBER}.jar
                '''
                withAWS(credentials: "${SERVER_CREDENTIALS}", region: "${REGION}") {
                    script {
                        s3Upload(file: "./demo-${BUILD_NUMBER}.jar", bucket: "${BUCKET}", path:"backend/demo-${BUILD_NUMBER}.jar")
                    }
                }
                sh 'rm ./demo-${BUILD_NUMBER}.jar'
            }
        }
        stage('Deploy') {
            agent { label 'java && target' }
            steps {
                withAWS(credentials: "${SERVER_CREDENTIALS}", region: "${REGION}") {
                    script {
                        s3Download(file:"./demo-${BUILD_NUMBER}.jar", bucket:"${BUCKET}", path:"backend/demo-${BUILD_NUMBER}.jar")
                    }
                }
                sh '''
                    sudo systemctl stop provedcode || true
                    chmod 755 ./backend/install-systemd-service.sh
                    ./backend/install-systemd-service.sh
                    mv -f ./demo-${BUILD_NUMBER}.jar ~/demo.jar
                    sudo systemctl enable provedcode --now
                '''
            }
        }
    }
    post {
        always {
            discordSend description: "Status: `${currentBuild.currentResult}`\nBuild log: ${BUILD_URL}consoleText",
                link: env.BUILD_URL,
                result: currentBuild.currentResult,
                title: JOB_NAME,
                webhookURL: "${env.WEBHOOK_URL}"
        }
    }
}